---
layout: post
title: "SOAP - PICO CTF"
date: 2023-03-18 20:56:54 -0400
categories: Pico
---


Category: Web Exploitation 

Points: 100


---

<h1> Description </h1>

The web project was rushed and no security assessment was done. Can you read the /etc/passwd file?

Tags: picoCTF 2023, Web Exploitation, XXE

---

Running the instance we are brought to a page that just displays some basic information and not much else going on. However, the one tag 'XXE' is a big hint that we're going to have an XML external entity injection (XXE is its shorthand name). 

![soap_home](./assets/images/soap_home.png)

Pretty much this just means that we can alter the XML data of the web application and interact with the backend. 

So I'm going to pull up burpsuit so that this whole process is easier and start looking for XML code in the web page. Looking through the source code, we see a call to a script:

 ```<script src="/static/js/xmlDetailsCheckPayload.js">``` 


This is exactly the kind of data we want. So adding that to our url we are directed to a page showing the js code.

{% highlight javascript %}
window.contentType = 'application/xml';

function payload(data) {
    var xml = '<?xml version="1.0" encoding="UTF-8"?>';
    xml += '<data>';

    for(var pair of data.entries()) {
        var key = pair[0];
        var value = pair[1];

        xml += '<' + key + '>' + value + '</' + key + '>';
    }

    xml += '</data>';
    return xml;
}

{% endhighlight %}

Here's the page we want to alter and inject the XML code into. The current contents of the file aren't really important to us. Using burpsuite's proxy to intercept the traffic, clicking one of the buttons will send you this js file which can be modified. So we can add a very basic XML injection ```<!DOCTYPE foo[ <!ENTITY xxe SYSTEM "file:///etc/passwd">]>```.

![soap_exploit](/assets/images/soap_exploit.png)

To break this down, we create a doctype foo entity called xxe which is accessing the file at the given path. The file pathing is what the challenge description told us to try and access and we are adding an entity xxe which can be named to anything you want (it is just the name of the new entity).

Now we can forward the traffic with this modification making sure that you have intercept traffic response on (action -> intercept -> show response?) and the response gives us a bunch of information including the flag: **picoCTF{XML_3xtern@l_3nt1t1ty_0dcf926e}**.


![soap_flag](/assets/images/soap_flag.png)
